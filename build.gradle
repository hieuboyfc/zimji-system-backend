allprojects {
    repositories {
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
}

buildscript {
    /*ext {
        springBootVersion = '3.2.3'
        springManagementVersion = '1.1.4'
    }*/

    repositories {
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }

    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
        classpath "io.spring.gradle:dependency-management-plugin:${springDependenciesManagementVersion}"
        classpath "gradle.plugin.com.avast.gradle:gradle-docker-compose-plugin:${dockerComposePluginVersion}"
    }
}

subprojects {
    apply plugin: "io.spring.dependency-management"
    apply plugin: "java-library"
    apply plugin: 'idea'
    apply plugin: 'maven-publish'

    sourceCompatibility = '17'
    targetCompatibility = '17'

    group = group
    version = version

    idea {
        module {
            downloadJavadoc = true
            downloadSources = true
        }
    }

    dependencyManagement {
        imports { mavenBom "org.springframework.boot:spring-boot-dependencies:${springBootVersion}" }
        imports { mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}" }
        // imports { mavenBom "org.keycloak.bom:keycloak-adapter-bom:${keycloakVersion}" }

        dependencies {
            dependency "io.springfox:springfox-boot-starter:${springfoxVersion}"
            dependency "io.springfox:springfox-swagger-ui:${springfoxVersion}"

            dependency "commons-lang:commons-lang3:${commonsLang3Version}"
            dependency "commons-validator:commons-validator:${commonsValidatorVersion}"

            dependency "org.hibernate:hibernate-envers:${hibernateEnvers}"
        }
    }

    dependencies {
        annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"
        annotationProcessor "org.projectlombok:lombok:${lombokVersion}"

        compileOnly "org.springframework.boot:spring-boot-configuration-processor"
        compileOnly "org.projectlombok:lombok:${lombokVersion}"

        // SPRING DEPENDENCIES
        implementation "org.springframework.boot:spring-boot-configuration-processor"
        implementation 'org.springframework.boot:spring-boot-starter-actuator'
        implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
        // implementation 'org.springframework.boot:spring-boot-starter-security'
        implementation 'org.springframework.boot:spring-boot-starter-validation'
        implementation 'org.springframework.boot:spring-boot-starter-web-services'
        implementation 'org.springframework.boot:spring-boot-starter-web'
        implementation 'org.springframework.boot:spring-boot-devtools'

        runtimeOnly "org.postgresql:postgresql"

        // TEST
        testImplementation 'org.springframework.boot:spring-boot-starter-test'
        // testImplementation 'org.springframework.security:spring-security-test'
    }

    def defaultEncoding = 'UTF-8'
    tasks.withType(AbstractCompile).each { it.options.encoding = defaultEncoding }

    javadoc {
        options.encoding = defaultEncoding
        options.addBooleanOption('Xdoclint:none', true)
    }

    compileJava.dependsOn(processResources)

    configurations {
        compileOnly {
            extendsFrom annotationProcessor
        }
        compile.exclude module: 'spring-boot-starter-tomcat'
        compile.exclude group: 'org.apache.tomcat'
    }

    repositories {
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
}

tasks.withType(JavaCompile) {
    options.compilerArgs << "-parameters"
}

project(':system-service') {
    dependencies {
        implementation project(':system-share')
        compile('org.springframework.boot:spring-boot-starter-web')
        compile('org.springframework.boot:spring-boot-devtools')
    }
}

project(':system-share') {

}
